{"ast":null,"code":"var _jsxFileName = \"D:\\\\Frontend3\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    nombre,\n    descripcion,\n    stock,\n    contador\n  } = _ref;\n  const [cantidadStock, setCantidadStock] = useState(stock);\n\n  const restaStock = () => {\n    setCantidadStock(cantidadStock - 1);\n    contador();\n\n    if (cantidadStock <= 0) {\n      boton.innerText(\"SIN STOCK\");\n      boton.disabled = \"true\";\n    }\n  };\n\n  const boton = document.querySelector(\".boton\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Stock\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cantidadStock > 0 ? cantidadStock : \"agotado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"boton\",\n      disabled: \"\",\n      onClick: restaStock,\n      children: \"COMPRAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"lZ3A8Jsdgmv87Xui13HgoipzqH8=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["isDisabled","React","useState","Item","nombre","descripcion","stock","contador","cantidadStock","setCantidadStock","restaStock","boton","innerText","disabled","document","querySelector"],"sources":["D:/Frontend3/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\r\nimport React, {useState} from \"react\";\r\nexport default function Item({nombre,descripcion,stock,contador}) {\r\n\r\n  const [cantidadStock,setCantidadStock]= useState(stock);\r\n\r\n  const restaStock=()=>{\r\n    setCantidadStock(cantidadStock-1);\r\n    contador();\r\n\r\n    if(cantidadStock<=0){\r\n      boton.innerText(\"SIN STOCK\");\r\n      boton.disabled=\"true\"\r\n      \r\n    }\r\n\r\n  \r\n  }\r\n\r\n const boton=  document.querySelector(\".boton\");\r\n\r\n\r\n  return (\r\n    <div className='producto'>\r\n      <h3>{nombre}</h3>\r\n      <p>{descripcion}</p>\r\n      <h5>Stock<span>{cantidadStock>0? cantidadStock:\"agotado\"}</span></h5>\r\n      <button className=\"boton\" disabled=\"\" onClick={restaStock}>COMPRAR</button>\r\n     \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,wCAA3B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,eAAe,SAASC,IAAT,OAAmD;EAAA;;EAAA,IAArC;IAACC,MAAD;IAAQC,WAAR;IAAoBC,KAApB;IAA0BC;EAA1B,CAAqC;EAEhE,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAkCP,QAAQ,CAACI,KAAD,CAAhD;;EAEA,MAAMI,UAAU,GAAC,MAAI;IACnBD,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;IACAD,QAAQ;;IAER,IAAGC,aAAa,IAAE,CAAlB,EAAoB;MAClBG,KAAK,CAACC,SAAN,CAAgB,WAAhB;MACAD,KAAK,CAACE,QAAN,GAAe,MAAf;IAED;EAGF,CAXD;;EAaD,MAAMF,KAAK,GAAGG,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;EAGC,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,UAAKX;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,iCAAS;QAAA,UAAOG,aAAa,GAAC,CAAd,GAAiBA,aAAjB,GAA+B;MAAtC;QAAA;QAAA;QAAA;MAAA,QAAT;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,SAAS,EAAC,OAAlB;MAA0B,QAAQ,EAAC,EAAnC;MAAsC,OAAO,EAAEE,UAA/C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA7BuBP,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}